#include <windows.h>
#pragma comment(lib, "SPLab10_3.lib")

extern "C" __declspec(dllimport) void function(); // Неявно

int main()
{
	function();
	system("pause");
	return 0;
}

/*
При неявной компоновке функции загружаемой DLL добавляются в секцию импорта вызывающего файла.
При запуске такого файла загрузчик операционной системы анализирует секцию импорта и подключает все указанные библиотеки.
Ввиду своей простоты этот способ пользуется большой популярностью; но простота - простотой, а неявной компоновке присущи определенные недостатки и ограничения:

1) Все подключенные DLL загружаются всегда, даже если в течение всего сеанса работы программа ни разу не обратится ни к одной из них;
2) Если хотя бы одна из требуемых DLL отсутствует (или DLL не экспортирует хотя бы одной требуемой функции) - загрузка исполняемого файла прерывается сообщением "Dynamic link library could not be found" 
(или что-то в этом роде) - даже если отсутствие этой DLL некритично для исполнения программы. 
Например, текстовой редактор мог бы вполне работать и в минимальной комплектации - без модуля печати, вывода таблиц, графиков, формул и прочих второстепенных компонентов, но если эти DLL загружаются неявной компоновкой - хочешь не хочешь, придется "тянуть" их за собой.
3) поиск DLL происходит в следующем порядке: в каталоге, содержащем вызывающий файл; в текущем каталоге процесса; в системном каталоге %Windows%System%; в основном каталоге %Windows%; в каталогах, указанных в переменной PATH. Задать другой путь поиска невозможно
(вернее - возможно, но для этого потребуется вносить изменения в системный реестр, и эти изменения окажут влияние на все процессы, исполняющиеся в системе - что не есть хорошо).


*/